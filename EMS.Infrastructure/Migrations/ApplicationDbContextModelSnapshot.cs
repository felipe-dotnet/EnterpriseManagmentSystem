// <auto-generated />
using System;
using EMS.Infrastructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EMS.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EMS.Domain.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Customers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Av. Insurgentes Sur 1234",
                            City = "Ciudad de México",
                            CompanyName = "Tech Solutions México SA de CV",
                            ContactName = "Carlos Rivera Mendoza",
                            Country = "México",
                            CreatedAt = new DateTime(2025, 9, 29, 18, 17, 50, 797, DateTimeKind.Utc).AddTicks(592),
                            Email = "carlos@techsolutions.mx",
                            IsDeleted = false,
                            Phone = "+52 555 111 2222",
                            PostalCode = "03100"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Blvd. Manuel Ávila Camacho 567",
                            City = "Guadalajara",
                            CompanyName = "Innovate Corp",
                            ContactName = "Ana Martínez Silva",
                            Country = "México",
                            CreatedAt = new DateTime(2025, 9, 29, 18, 17, 50, 797, DateTimeKind.Utc).AddTicks(594),
                            Email = "ana@innovatecorp.com",
                            IsDeleted = false,
                            Phone = "+52 555 333 4444",
                            PostalCode = "44100"
                        });
                });

            modelBuilder.Entity("EMS.Domain.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Salary")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Employees", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 29, 18, 17, 50, 796, DateTimeKind.Utc).AddTicks(8679),
                            Department = "Tecnología",
                            Email = "juan.perez@empresa.com",
                            FirstName = "Juan Carlos",
                            HireDate = new DateTime(2020, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LastName = "Pérez López",
                            Phone = "+52 555 123 4567",
                            Position = "Desarrollador Senior",
                            Salary = 75000m,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 9, 29, 18, 17, 50, 796, DateTimeKind.Utc).AddTicks(8683),
                            Department = "Ventas",
                            Email = "maria.gonzalez@empresa.com",
                            FirstName = "María Elena",
                            HireDate = new DateTime(2019, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            LastName = "González Ruiz",
                            Phone = "+52 555 987 6543",
                            Position = "Gerente de Ventas",
                            Salary = 85000m,
                            Status = 1
                        });
                });

            modelBuilder.Entity("EMS.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("RequiredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ShippedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShippingAddress")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OrderNumber")
                        .IsUnique();

                    b.ToTable("Orders", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 19, 18, 17, 50, 797, DateTimeKind.Utc).AddTicks(4082),
                            CustomerId = 1,
                            IsDeleted = false,
                            Notes = "Orden prioritaria - Cliente premium",
                            OrderDate = new DateTime(2025, 9, 19, 18, 17, 50, 797, DateTimeKind.Utc).AddTicks(4072),
                            OrderNumber = "ORD-2024-001",
                            RequiredDate = new DateTime(2025, 10, 4, 18, 17, 50, 797, DateTimeKind.Utc).AddTicks(4076),
                            Status = 2,
                            TotalAmount = 15000.00m
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 9, 24, 18, 17, 50, 797, DateTimeKind.Utc).AddTicks(4085),
                            CustomerId = 2,
                            IsDeleted = false,
                            OrderDate = new DateTime(2025, 9, 24, 18, 17, 50, 797, DateTimeKind.Utc).AddTicks(4084),
                            OrderNumber = "ORD-2024-002",
                            RequiredDate = new DateTime(2025, 10, 9, 18, 17, 50, 797, DateTimeKind.Utc).AddTicks(4084),
                            Status = 1,
                            TotalAmount = 8500.00m
                        });
                });

            modelBuilder.Entity("EMS.Domain.Entities.Order", b =>
                {
                    b.HasOne("EMS.Domain.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("EMS.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
